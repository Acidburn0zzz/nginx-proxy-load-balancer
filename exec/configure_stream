#!/bin/bash

while read line2; do unset "$line2"; done < <(compgen -A variable | grep "auto_config")

while getopts ":u:O:o:P:T:n:" opt; do
  case $opt in
    u)
      auto_config_upstream="$OPTARG";;
    O)
      auto_config_upstream_options="$OPTARG";;
    o)
      auto_config_server_options="$OPTARG";;
    P)
      auto_config_port="$OPTARG";;
    T)
      auto_config_type="$OPTARG";;
    n)
      auto_config_name="$OPTARG";;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

function configure_the_config(){

if [[ -z "$auto_config_upstream" ]]; then
	echo "no upstream specified";
	exit 1
else
	auto_config_upstream=$(sed -e "s/[[:space:]]\+/ /g" <<< $auto_config_upstream)
fi

if [[ -z "$auto_config_port" ]]; then
	echo "no port specified";
	exit 1
else
	auto_config_port=$(sed -e "s/[[:space:]]\+/ /g" <<< $auto_config_port)
fi

if [[ "$auto_config_type" == "UDP" ]]; then
	auto_config_port="$auto_config_port udp"
fi

filename="${auto_config_port% *}"

# create a temporary file to write stuff to
tmpfile=$(mktemp /tmp/abc-script.XXXXXX)
exec 3>"$tmpfile"
rm "$tmpfile"

oldIFS="$IFS" # store current value of IFS

IFS='|' read -r -a auto_config_upstream_array <<< "$auto_config_upstream" # turn to array and loop through
for single_upstream in "${auto_config_upstream_array[@]}"
do
	single_upstream_without_leading_whitespace="${single_upstream#"${single_upstream%%[![:space:]]*}"}" # Removing leading whitespace "}
	single_upstream_host=${single_upstream_without_leading_whitespace%% *} # Extract just the host from the upstream definition

	ping -c 1 "${single_upstream_host%:*}" > $tmpfile 2>&1 # ping the host to check if it is valid
	check_address=$(grep -m 1 "unknown host" $tmpfile)

	if [[ ! -z "$check_address" ]]; then
		echo "upstream \"${single_upstream% *}\" cannot be reached";
		exit 1
	fi
done

IFS="$oldIFS" # restore IFS

if [[ "$filename" == "default" ]]; then
	filename="${filename% *}-custom"
fi

# Add the upstream block
if [[ ! -z "$auto_config_upstream_options" ]]; then
	echo "
		upstream ${auto_config_name}_upstream  {
		    server ${auto_config_upstream//\|/;
			server };
			${auto_config_upstream_options//\|/;
			};
		}
		" > /etc/nginx/conf.d/streams/"$filename"-upstream.conf
else
	echo "
		upstream ${auto_config_name}_upstream  {
		    server ${auto_config_upstream//\|/;
			server };
		}
		" > /etc/nginx/conf.d/streams/"$filename"-upstream.conf
fi

# add the server block
if [[ ! -z "$auto_config_server_options" ]]; then
	echo "
		server {
		    listen $auto_config_port;
		    proxy_pass ${auto_config_name}_upstream;
			${auto_config_server_options//\|/;
			};
		}
		" > /etc/nginx/conf.d/streams/"$filename".conf
else
	echo "
		server {
		    listen $auto_config_port;
		    proxy_pass ${auto_config_name}_upstream;
		}
		" > /etc/nginx/conf.d/streams/"$filename".conf
fi
	
service nginx reload

}
configure_the_config
